// {/* <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
//           {/* Add Lot */}
//           <div className="bg-gray-800 p-6 rounded-lg shadow-lg">
//             <h2 className="text-2xl font-semibold mb-4">Add New Lot</h2>
//             <input
//               type="text"
//               placeholder="Name"
//               value={newLot.name}
//               onChange={(e) => setNewLot({ ...newLot, name: e.target.value })}
//               className="block w-full mb-4 p-2 bg-gray-700 rounded"
//             />
//             <textarea
//               placeholder="Description"
//               value={newLot.description}
//               onChange={(e) => setNewLot({ ...newLot, description: e.target.value })}
//               className="block w-full mb-4 p-2 bg-gray-700 rounded"
//             />
//             <input
//               type="number"
//               placeholder="Current Bid"
//               value={newLot.current_bid}
//               onChange={(e) => setNewLot({ ...newLot, current_bid: parseFloat(e.target.value) })}
//               className="block w-full mb-4 p-2 bg-gray-700 rounded"
//             />
//             <input
//               type="number"
//               placeholder="Time Left (seconds)"
//               value={newLot.time_left}
//               onChange={(e) => setNewLot({ ...newLot, time_left: parseInt(e.target.value) })}
//               className="block w-full mb-4 p-2 bg-gray-700 rounded"
//             />
//             <input
//               type="file"
//               onChange={(e) => setFile(e.target.files[0])}
//               className="block w-full mb-4 p-2 bg-gray-700 rounded"
//             />
//             <button
//               onClick={handleAddLot}
//               className="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white w-full"
//             >
//               Add Lot
//             </button>
//           </div>



//  {/* Add New Option */}
//  <div className="bg-gray-800 p-6 rounded-lg shadow-lg">
//             <h2 className="text-2xl font-semibold mb-4">Add New Option</h2>
//             <input
//               type="text"
//               placeholder="Option Name"
//               value={newOption.name}
//               onChange={(e) => setNewOption({ ...newOption, name: e.target.value })}
//               className="block w-full mb-4 p-2 bg-gray-700 rounded"
//             />
//             <input
//               type="number"
//               placeholder="Cost"
//               value={newOption.cost}
//               onChange={(e) => setNewOption({ ...newOption, cost: parseFloat(e.target.value) })}
//               className="block w-full mb-4 p-2 bg-gray-700 rounded"
//             />
//             <textarea
//               placeholder="Description"
//               value={newOption.description}
//               onChange={(e) => setNewOption({ ...newOption, description: e.target.value })}
//               className="block w-full mb-4 p-2 bg-gray-700 rounded"
//             />
//             <button
//               onClick={handleAddOption}
//               className="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white w-full"
//             >
//               Add Option
//             </button>
//           </div> */}


useEffect(() => {
    const fetchUserAndAdmins = async () => {
      const {
        data: { user },
        error: sessionError,
      } = await supabase.auth.getUser();

      if (sessionError || !user) {
        setUser(null);
        setIsAdmin(false);
        return;
      }

      setUser(user);

      const { data: adminData } = await supabase
        .from('admins')
        .select('*')
        .eq('user_id', user.id);

      setIsAdmin(adminData.length > 0);
    };

    fetchUserAndAdmins();
  }, []);